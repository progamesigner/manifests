---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: tailscale
    app.kubernetes.io/name: wireguard
    app.kubernetes.io/part-of: components
  name: tailscale-wireguard-ch
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: tailscale
      app.kubernetes.io/name: wireguard
      app.kubernetes.io/part-of: components
  template:
    metadata:
      labels:
        app.kubernetes.io/component: tailscale
        app.kubernetes.io/name: wireguard
        app.kubernetes.io/part-of: components
        kubernetes.progamesigner.dev/vpn-region: ch
    spec:
      automountServiceAccountToken: true
      initContainers:
      - name: sysctls
        image: busybox:latest
        command:
        - sh
        - -c
        - set -ex;
          sysctl -w net.ipv4.conf.all.rp_filter=2;
          sysctl -w net.ipv4.conf.all.src_valid_mark=1;
        resources:
          requests:
            cpu: 1m
            memory: 1Mi
        securityContext:
          privileged: true
      containers:
      - name: tailscale
        image: network/tailscale:latest
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale
              key: TS_AUTHKEY
        - name: TS_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: tailscale
              key: TS_HOSTNAME_CH
        - name: TS_KUBE_SECRET
          value: tailscale-wireguard-ch
        envFrom:
        - configMapRef:
            name: tailscale
        ports:
        - name: socks
          containerPort: 1080
        - name: proxy
          containerPort: 8080
        livenessProbe:
          exec:
            command:
            - tailscale
            - ip
            - --4
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
      - name: wireguard
        image: network/wireguard:latest
        envFrom:
        - configMapRef:
            name: wireguard
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - wg show wg0 | grep -q "latest handshake:"
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
        volumeMounts:
        - name: wireguard
          mountPath: /etc/wireguard
      enableServiceLinks: false
      serviceAccountName: default
      volumes:
      - name: wireguard
        secret:
          secretName: wireguard
          defaultMode: 400
          items:
          - key: protonvpn.ch.conf
            path: wg0.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: tailscale
    app.kubernetes.io/name: wireguard
    app.kubernetes.io/part-of: components
  name: tailscale-wireguard-de
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: tailscale
      app.kubernetes.io/name: wireguard
      app.kubernetes.io/part-of: components
  template:
    metadata:
      labels:
        app.kubernetes.io/component: tailscale
        app.kubernetes.io/name: wireguard
        app.kubernetes.io/part-of: components
        kubernetes.progamesigner.dev/vpn-region: de
    spec:
      automountServiceAccountToken: true
      initContainers:
      - name: sysctls
        image: busybox:latest
        command:
        - sh
        - -c
        - set -ex;
          sysctl -w net.ipv4.conf.all.rp_filter=2;
          sysctl -w net.ipv4.conf.all.src_valid_mark=1;
        resources:
          requests:
            cpu: 1m
            memory: 1Mi
        securityContext:
          privileged: true
      containers:
      - name: tailscale
        image: network/tailscale:latest
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale
              key: TS_AUTHKEY
        - name: TS_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: tailscale
              key: TS_HOSTNAME_DE
        - name: TS_KUBE_SECRET
          value: tailscale-wireguard-de
        envFrom:
        - configMapRef:
            name: tailscale
        ports:
        - name: socks
          containerPort: 1080
        - name: proxy
          containerPort: 8080
        livenessProbe:
          exec:
            command:
            - tailscale
            - ip
            - --4
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
      - name: wireguard
        image: network/wireguard:latest
        envFrom:
        - configMapRef:
            name: wireguard
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - wg show wg0 | grep -q "latest handshake:"
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
        volumeMounts:
        - name: wireguard
          mountPath: /etc/wireguard
      enableServiceLinks: false
      serviceAccountName: default
      volumes:
      - name: wireguard
        secret:
          secretName: wireguard
          defaultMode: 400
          items:
          - key: protonvpn.de.conf
            path: wg0.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: tailscale
    app.kubernetes.io/name: wireguard
    app.kubernetes.io/part-of: components
  name: tailscale-wireguard-jp
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: tailscale
      app.kubernetes.io/name: wireguard
      app.kubernetes.io/part-of: components
  template:
    metadata:
      labels:
        app.kubernetes.io/component: tailscale
        app.kubernetes.io/name: wireguard
        app.kubernetes.io/part-of: components
        kubernetes.progamesigner.dev/vpn-region: jp
    spec:
      automountServiceAccountToken: true
      initContainers:
      - name: sysctls
        image: busybox:latest
        command:
        - sh
        - -c
        - set -ex;
          sysctl -w net.ipv4.conf.all.rp_filter=2;
          sysctl -w net.ipv4.conf.all.src_valid_mark=1;
        resources:
          requests:
            cpu: 1m
            memory: 1Mi
        securityContext:
          privileged: true
      containers:
      - name: tailscale
        image: network/tailscale:latest
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale
              key: TS_AUTHKEY
        - name: TS_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: tailscale
              key: TS_HOSTNAME_JP
        - name: TS_KUBE_SECRET
          value: tailscale-wireguard-jp
        envFrom:
        - configMapRef:
            name: tailscale
        ports:
        - name: socks
          containerPort: 1080
        - name: proxy
          containerPort: 8080
        livenessProbe:
          exec:
            command:
            - tailscale
            - ip
            - --4
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
      - name: wireguard
        image: network/wireguard:latest
        envFrom:
        - configMapRef:
            name: wireguard
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - wg show wg0 | grep -q "latest handshake:"
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
        volumeMounts:
        - name: wireguard
          mountPath: /etc/wireguard
      enableServiceLinks: false
      serviceAccountName: default
      volumes:
      - name: wireguard
        secret:
          secretName: wireguard
          defaultMode: 400
          items:
          - key: protonvpn.jp.conf
            path: wg0.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: tailscale
    app.kubernetes.io/name: wireguard
    app.kubernetes.io/part-of: components
  name: tailscale-wireguard-tw
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: tailscale
      app.kubernetes.io/name: wireguard
      app.kubernetes.io/part-of: components
  template:
    metadata:
      labels:
        app.kubernetes.io/component: tailscale
        app.kubernetes.io/name: wireguard
        app.kubernetes.io/part-of: components
        kubernetes.progamesigner.dev/vpn-region: tw
    spec:
      automountServiceAccountToken: true
      initContainers:
      - name: sysctls
        image: busybox:latest
        command:
        - sh
        - -c
        - set -ex;
          sysctl -w net.ipv4.conf.all.rp_filter=2;
          sysctl -w net.ipv4.conf.all.src_valid_mark=1;
        resources:
          requests:
            cpu: 1m
            memory: 1Mi
        securityContext:
          privileged: true
      containers:
      - name: tailscale
        image: network/tailscale:latest
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale
              key: TS_AUTHKEY
        - name: TS_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: tailscale
              key: TS_HOSTNAME_TW
        - name: TS_KUBE_SECRET
          value: tailscale-wireguard-tw
        envFrom:
        - configMapRef:
            name: tailscale
        ports:
        - name: socks
          containerPort: 1080
        - name: proxy
          containerPort: 8080
        livenessProbe:
          exec:
            command:
            - tailscale
            - ip
            - --4
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
      - name: wireguard
        image: network/wireguard:latest
        envFrom:
        - configMapRef:
            name: wireguard
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - wg show wg0 | grep -q "latest handshake:"
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
        volumeMounts:
        - name: wireguard
          mountPath: /etc/wireguard
      enableServiceLinks: false
      serviceAccountName: default
      volumes:
      - name: wireguard
        secret:
          secretName: wireguard
          defaultMode: 400
          items:
          - key: protonvpn.tw.conf
            path: wg0.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: tailscale
    app.kubernetes.io/name: wireguard
    app.kubernetes.io/part-of: components
  name: tailscale-wireguard-us
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: tailscale
      app.kubernetes.io/name: wireguard
      app.kubernetes.io/part-of: components
  template:
    metadata:
      labels:
        app.kubernetes.io/component: tailscale
        app.kubernetes.io/name: wireguard
        app.kubernetes.io/part-of: components
        kubernetes.progamesigner.dev/vpn-region: us
    spec:
      automountServiceAccountToken: true
      initContainers:
      - name: sysctls
        image: busybox:latest
        command:
        - sh
        - -c
        - set -ex;
          sysctl -w net.ipv4.conf.all.rp_filter=2;
          sysctl -w net.ipv4.conf.all.src_valid_mark=1;
        resources:
          requests:
            cpu: 1m
            memory: 1Mi
        securityContext:
          privileged: true
      containers:
      - name: tailscale
        image: network/tailscale:latest
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale
              key: TS_AUTHKEY
        - name: TS_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: tailscale
              key: TS_HOSTNAME_US
        - name: TS_KUBE_SECRET
          value: tailscale-wireguard-us
        envFrom:
        - configMapRef:
            name: tailscale
        ports:
        - name: socks
          containerPort: 1080
        - name: proxy
          containerPort: 8080
        livenessProbe:
          exec:
            command:
            - tailscale
            - ip
            - --4
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
      - name: wireguard
        image: network/wireguard:latest
        envFrom:
        - configMapRef:
            name: wireguard
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - wg show wg0 | grep -q "latest handshake:"
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
        volumeMounts:
        - name: wireguard
          mountPath: /etc/wireguard
      enableServiceLinks: false
      serviceAccountName: default
      volumes:
      - name: wireguard
        secret:
          secretName: wireguard
          defaultMode: 400
          items:
          - key: protonvpn.us.conf
            path: wg0.conf
