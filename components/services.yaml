---
apiVersion: v1
kind: Service
metadata:
  name: adguard-home
spec:
  ports:
  - name: https
    port: 443
    targetPort: https
  - name: dns-tls
    port: 853
    targetPort: dns-tls
  - name: dnscrypt
    port: 5443
    targetPort: dnscrypt
  selector:
    app.kubernetes.io/component: adguard-home
    app.kubernetes.io/name: adguard-home
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: apprise
spec:
  ports:
  - name: http
    port: 8000
    targetPort: http
  selector:
    app.kubernetes.io/component: apprise
    app.kubernetes.io/name: apprise
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: coder
spec:
  ports:
  - name: http
    port: 3000
    targetPort: http
  selector:
    app.kubernetes.io/component: coder
    app.kubernetes.io/name: coder
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: dify-api
spec:
  ports:
  - name: http
    port: 5001
    targetPort: http
  selector:
    app.kubernetes.io/component: api
    app.kubernetes.io/name: dify
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: dify-plugin-daemon
spec:
  ports:
  - name: http
    port: 5002
    targetPort: http
  selector:
    app.kubernetes.io/component: plugin-daemon
    app.kubernetes.io/name: dify
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: dify-sandbox
spec:
  ports:
  - name: http
    port: 8194
    targetPort: http
  selector:
    app.kubernetes.io/component: sandbox
    app.kubernetes.io/name: dify
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: dify-ssrf-proxy
spec:
  ports:
  - name: proxy
    port: 3128
    targetPort: proxy
  selector:
    app.kubernetes.io/component: ssrf-proxy
    app.kubernetes.io/name: dify
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: dify-web
spec:
  ports:
  - name: http
    port: 3000
    targetPort: http
  selector:
    app.kubernetes.io/component: web
    app.kubernetes.io/name: dify
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: gloomhaven
spec:
  ports:
  - name: http
    port: 8080
    targetPort: http
  selector:
    app.kubernetes.io/component: secretariat
    app.kubernetes.io/name: gloomhaven
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: dashboard
spec:
  ports:
  - name: http
    port: 8123
    targetPort: http
  selector:
    app.kubernetes.io/component: home-assistant
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: home-assistant
spec:
  ports:
  - name: http
    port: 8123
    targetPort: http
  selector:
    app.kubernetes.io/component: home-assistant
    app.kubernetes.io/name: home-assistant
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: node-red
spec:
  ports:
  - name: http
    port: 1880
    targetPort: http
  selector:
    app.kubernetes.io/component: node-red
    app.kubernetes.io/name: node-red
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-compass
spec:
  ports:
  - name: http
    port: 8080
    targetPort: http
  selector:
    app.kubernetes.io/component: mongodb-compass
    app.kubernetes.io/name: mongodb-compass
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
spec:
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app.kubernetes.io/component: pgadmin
    app.kubernetes.io/name: pgadmin
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: phpmyadmin
spec:
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app.kubernetes.io/component: phpmyadmin
    app.kubernetes.io/name: phpmyadmin
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: proxy
spec:
  ports:
  - name: socks
    port: 1080
    targetPort: socks
  - name: proxy
    port: 8080
    targetPort: proxy
  selector:
    app.kubernetes.io/component: cloudflare-warp
    app.kubernetes.io/name: proxy
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-ch
spec:
  ports:
  - name: socks
    port: 1080
    targetPort: socks
  - name: proxy
    port: 8080
    targetPort: proxy
  selector:
    app.kubernetes.io/component: tailscale
    app.kubernetes.io/name: protonvpn
    app.kubernetes.io/part-of: components
    kubernetes.progamesigner.dev/vpn-region: ch
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-de
spec:
  ports:
  - name: socks
    port: 1080
    targetPort: socks
  - name: proxy
    port: 8080
    targetPort: proxy
  selector:
    app.kubernetes.io/component: tailscale
    app.kubernetes.io/name: protonvpn
    app.kubernetes.io/part-of: components
    kubernetes.progamesigner.dev/vpn-region: de
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-jp
spec:
  ports:
  - name: socks
    port: 1080
    targetPort: socks
  - name: proxy
    port: 8080
    targetPort: proxy
  selector:
    app.kubernetes.io/component: tailscale
    app.kubernetes.io/name: protonvpn
    app.kubernetes.io/part-of: components
    kubernetes.progamesigner.dev/vpn-region: jp
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-tw
spec:
  ports:
  - name: socks
    port: 1080
    targetPort: socks
  - name: proxy
    port: 8080
    targetPort: proxy
  selector:
    app.kubernetes.io/component: tailscale
    app.kubernetes.io/name: protonvpn
    app.kubernetes.io/part-of: components
    kubernetes.progamesigner.dev/vpn-region: tw
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-us
spec:
  ports:
  - name: socks
    port: 1080
    targetPort: socks
  - name: proxy
    port: 8080
    targetPort: proxy
  selector:
    app.kubernetes.io/component: tailscale
    app.kubernetes.io/name: protonvpn
    app.kubernetes.io/part-of: components
    kubernetes.progamesigner.dev/vpn-region: us
---
apiVersion: v1
kind: Service
metadata:
  name: redis-insight
spec:
  ports:
  - name: http
    port: 5540
    targetPort: http
  selector:
    app.kubernetes.io/component: redis-insight
    app.kubernetes.io/name: redis-insight
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: rsshub
spec:
  ports:
  - name: http
    port: 1200
    targetPort: http
  selector:
    app.kubernetes.io/component: rsshub
    app.kubernetes.io/name: rsshub
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: syncthing
spec:
  ports:
  - name: http
    port: 8384
    targetPort: http
  selector:
    app.kubernetes.io/component: syncthing
    app.kubernetes.io/name: syncthing
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: unifi-network
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/component: unifi-network
    app.kubernetes.io/name: unifi-network
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: windmill
spec:
  ports:
  - name: http
    port: 8000
    targetPort: http
  selector:
    app.kubernetes.io/component: windmill
    app.kubernetes.io/name: windmill
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: windmill-api
spec:
  ports:
  - name: http
    port: 8000
    targetPort: http
  selector:
    app.kubernetes.io/component: windmill
    app.kubernetes.io/name: windmill
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  name: windmill-lsp
spec:
  ports:
  - name: lsp
    port: 3001
    targetPort: lsp
  selector:
    app.kubernetes.io/component: windmill-lsp
    app.kubernetes.io/name: windmill
    app.kubernetes.io/part-of: components
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: internal-dns
  labels:
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: AdGuardHome
  name: internal-dns
spec:
  externalTrafficPolicy: Local
  loadBalancerIP: 192.168.32.8
  ports:
  - name: dns
    port: 53
    targetPort: 53
    appProtocol: domain-s
  - name: http
    port: 80
    targetPort: 80
    appProtocol: http
  - name: https
    port: 443
    targetPort: 443
    appProtocol: https
  selector:
    app.kubernetes.io/component: adguard-home
    app.kubernetes.io/name: adguard-home
    app.kubernetes.io/part-of: components
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: internal-dns
  name: internal-dns-udp
spec:
  externalTrafficPolicy: Local
  loadBalancerIP: 192.168.32.8
  ports:
  - name: dns
    port: 53
    targetPort: 53
    protocol: UDP
    appProtocol: domain-s
  - name: https
    port: 443
    targetPort: 443
    protocol: UDP
    appProtocol: https
  selector:
    app.kubernetes.io/component: adguard-home
    app.kubernetes.io/name: adguard-home
    app.kubernetes.io/part-of: components
  type: LoadBalancer
---
apiVersion: k8s.nginx.org/v1
kind: TransportServer
metadata:
  name: adguard-home
spec:
  action:
    pass: adguard-home
  listener:
    name: dns-over-tls
    protocol: TCP
  upstreams:
  - name: adguard-home
    service: adguard-home
    port: 853
---
apiVersion: k8s.nginx.org/v1
kind: TransportServer
metadata:
  name: adguard-home-udp
spec:
  action:
    pass: adguard-home
  listener:
    name: dns-over-tls-udp
    protocol: UDP
  upstreams:
  - name: adguard-home
    service: adguard-home
    port: 853
  upstreamParameters:
    udpRequests: 1
    udpResponses: 1
