---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: coredns
    app.kubernetes.io/name: coredns
    app.kubernetes.io/part-of: kubernetes
    k8s-app: kube-dns
  name: coredns
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: coredns
      app.kubernetes.io/name: coredns
      app.kubernetes.io/part-of: kubernetes
  template:
    metadata:
      labels:
        app.kubernetes.io/component: coredns
        app.kubernetes.io/name: coredns
        app.kubernetes.io/part-of: kubernetes
    spec:
      automountServiceAccountToken: true
      containers:
      - name: coredns
        image: coredns/coredns:latest
        args:
        - -conf
        - /etc/coredns/Corefile
        ports:
        - name: dns
          containerPort: 53
        - name: dns-udp
          containerPort: 53
          protocol: UDP
        - name: monitor
          containerPort: 9153
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
        resources:
          limits:
            cpu: 1000m
            memory: 192Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: conf
          mountPath: /etc/coredns
          readOnly: true
      dnsPolicy: Default
      priorityClassName: system-cluster-critical
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - name: conf
        configMap:
          name: coredns
          items:
          - key: Corefile
            path: Corefile
