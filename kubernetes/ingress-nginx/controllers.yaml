---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: internal-ingress-nginx
    app.kubernetes.io/part-of: kubernetes
  name: internal-ingress-nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: internal-ingress-nginx
      app.kubernetes.io/part-of: kubernetes
  template:
    metadata:
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: internal-ingress-nginx
        app.kubernetes.io/part-of: kubernetes
    spec:
      automountServiceAccountToken: true
      containers:
      - name: ingress-nginx
        image: ingress-nginx/controller:latest
        args:
        - /nginx-ingress-controller
        - --configmap=$(POD_NAMESPACE)/ingress-nginx
        - --controller-class=k8s.io/ingress-nginx
        - --default-backend-service=$(POD_NAMESPACE)/default-backend
        - --election-id=internal-ingress-controller-leader
        - --enable-ssl-chain-completion=true
        - --ingress-class=internal-ingress-nginx
        - --publish-service=$(POD_NAMESPACE)/internal-ingress
        - --tcp-services-configmap=$(POD_NAMESPACE)/internal-ingress-nginx-tcp
        - --udp-services-configmap=$(POD_NAMESPACE)/internal-ingress-nginx-udp
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: webhook
          containerPort: 8443
        - name: monitor
          containerPort: 10254
        startupProbe:
          httpGet:
            path: /healthz
            port: 10254
          initialDelaySeconds: 5
          timeoutSeconds: 3
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
          initialDelaySeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
          initialDelaySeconds: 10
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 2000m
            memory: 2G
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
          runAsUser: 101
      priorityClassName: system-cluster-critical
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: external-ingress-nginx
    app.kubernetes.io/part-of: kubernetes
  name: external-ingress-nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: external-ingress-nginx
      app.kubernetes.io/part-of: kubernetes
  template:
    metadata:
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: external-ingress-nginx
        app.kubernetes.io/part-of: kubernetes
    spec:
      automountServiceAccountToken: true
      containers:
      - name: ingress-nginx
        image: ingress-nginx/controller:latest
        args:
        - /nginx-ingress-controller
        - --configmap=$(POD_NAMESPACE)/ingress-nginx
        - --controller-class=k8s.io/ingress-nginx
        - --default-backend-service=$(POD_NAMESPACE)/default-backend
        - --election-id=external-ingress-controller-leader
        - --enable-ssl-chain-completion=true
        - --ingress-class=external-ingress
        - --publish-service=$(POD_NAMESPACE)/external-ingress
        - --tcp-services-configmap=$(POD_NAMESPACE)/external-ingress-nginx-tcp
        - --udp-services-configmap=$(POD_NAMESPACE)/external-ingress-nginx-udp
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: webhook
          containerPort: 8443
        - name: monitor
          containerPort: 10254
        startupProbe:
          httpGet:
            path: /healthz
            port: 10254
          initialDelaySeconds: 5
          timeoutSeconds: 3
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
          initialDelaySeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
          initialDelaySeconds: 10
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 2000m
            memory: 2G
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
          runAsUser: 101
      priorityClassName: system-cluster-critical
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
