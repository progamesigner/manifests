---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: multus
    app.kubernetes.io/name: multus
    app.kubernetes.io/part-of: kubernetes
  name: multus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: multus
      app.kubernetes.io/name: multus
      app.kubernetes.io/part-of: kubernetes
  template:
    metadata:
      labels:
        app.kubernetes.io/component: multus
        app.kubernetes.io/name: multus
        app.kubernetes.io/part-of: kubernetes
    spec:
      automountServiceAccountToken: true
      containers:
      - name: multus
        image: multus/multus:latest
        command:
        - /thin_entrypoint
        - --cni-bin-dir=/opt/cni/bin
        - --cni-conf-dir=/etc/cni/net.d
        - --global-namespaces=default,kube-system
        - --multus-conf-file=/etc/multus/10-multus.conflist
        - --namespace-isolation=true
        envFrom:
        - configMapRef:
            name: kubernetes
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 32Mi
        securityContext:
          privileged: true
        volumeMounts:
        - name: cni-bin-dir
          mountPath: /opt/cni/bin
        - name: cni-conf-dir
          mountPath: /etc/cni/net.d
        - name: conf
          mountPath: /etc/multus
      hostNetwork: true
      priorityClassName: system-node-critical
      serviceAccountName: multus
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
      - name: cni-bin-dir
        hostPath:
          path: /opt/cni/bin
      - name: cni-conf-dir
        hostPath:
          path: /etc/cni/net.d
      - name: conf
        configMap:
          name: multus
          items:
          - key: cni-conf.json
            path: 10-multus.conflist
